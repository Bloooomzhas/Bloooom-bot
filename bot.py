import logging
import asyncio
import json
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
import requests

TOKEN = "7656620027:AAFMvmxiOqelHS3hC2IwsaWthlAg3DxRPmA"
ADMIN_ID = 123456789

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(F.text == "/start")
async def start_handler(message: Message):
    user_id = message.from_user.id

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(
                text="üíê –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", 
                web_app=WebAppInfo(url=f"https://oljawave.github.io/bloom-tg-miniapp/?user_id={user_id}")
            )],
            [KeyboardButton(text="üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã")],
            [KeyboardButton(text="‚ÑπÔ∏è –û –Ω–∞—Å")],
            [KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")]
        ],
        resize_keyboard=True
    )

    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üå∏\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Blooooom.\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ —Ü–≤–µ—Ç—ã.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ ‚¨áÔ∏è",
        reply_markup=keyboard
    )

@dp.message(lambda message: message.text == "üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã")
async def my_orders(message: types.Message):
    user_id = message.from_user.id  
    response = requests.get(f"https://bloom-backend-production.up.railway.app/orders/{user_id}")  

    if response.status_code == 200:
        orders = response.json().get("orders", [])

        if not orders:
            await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
            return
        
        text = "–í–∞—à–∏ –∑–∞–∫–∞–∑—ã:\n\n"
        for order in orders:
            dates = ', '.join(order['dates'])
            text += (
                f"üìå <b>–ó–∞–∫–∞–∑ #{order['order_id']}</b>\n"
                f"üìÖ <b>–î–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏:</b> {dates}\n"
                f"üí∞ <b>–ë—é–¥–∂–µ—Ç:</b> {order['price_range']}\n"
                f"üìç <b>–ê–¥—Ä–µ—Å:</b> {order['address']}\n"
                f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {order['phone']}\n\n"
            )

        await message.answer(text, parse_mode="HTML")
    else:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤")


@dp.message(F.text == "‚ÑπÔ∏è –û –Ω–∞—Å")
async def about_handler(message: Message):
    await message.answer("Blooooom ‚Äî —ç—Ç–æ —Å–µ—Ä–≤–∏—Å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ü–≤–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ä–∞–¥–æ—Å—Ç—å –∏ –∫—Ä–∞—Å–æ—Ç—É –ø—Ä—è–º–æ –∫ –≤–∞–º –¥–æ–º–æ–π! üå∫")

@dp.message(F.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def contacts_handler(message: Message):
    await message.answer("–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑:\n"
"üìß Email: staff@blooooom.kz\n"
"üì± Telegram: @blooooom_support\n"
"üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (708) 517-64-91")

@dp.message(F.web_app_data)
async def web_app_handler(message: Message):
    try:
        data = json.loads(message.web_app_data.data)
        print(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç WebApp: {data}")
        logging.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ—Ç WebApp: {data}")  

        if data.get("success") and data.get("user_id"):
            await bot.send_message(data["user_id"], "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!")
    
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö WebApp: {e}")


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
